package utils;

import java.io.File;
import java.nio.charset.StandardCharsets;
import java.security.Key;
import java.security.KeyStore;
import java.util.Base64;

import javax.crypto.Cipher;

public class DescifraRSA {

	private String mensaje;
	private String password;

	/**
	 * @param mensaje
	 * @param password
	 */
	public DescifraRSA(String mensaje, String password) {
		super();
		this.mensaje = mensaje;
		this.password = password;
	}

	public String getMensajeDescifrado(String archivoClaves, String alias) {

		String passwordAlias = "rsakeys";

		KeyStore almacen = KeyStore.getInstance(new File("rsakeys"), passwordAlias.toCharArray());

		Key clavePrivada = almacen.getKey(passwordAlias, passwordAlias.toCharArray());

		Cipher cifrador = Cipher.getInstance("RSA");
		cifrador.init(Cipher.DECRYPT_MODE, clavePrivada);

		byte[] mensajeBytes = cifrador.doFinal(Base64.getDecoder().decode(mensaje));

		String mensajeDescifrado = new String(mensajeBytes, StandardCharsets.UTF_8);
		return mensajeDescifrado;
	}

	/**
	 * @return the mensaje
	 */
	public String getMensaje() {
		return mensaje;
	}

	/**
	 * @param mensaje the mensaje to set
	 */
	public void setMensaje(String mensaje) {
		this.mensaje = mensaje;
	}

	/**
	 * @return the password
	 */
	public String getPassword() {
		return password;
	}

	/**
	 * @param password the password to set
	 */
	public void setPassword(String password) {
		this.password = password;
	}

}
