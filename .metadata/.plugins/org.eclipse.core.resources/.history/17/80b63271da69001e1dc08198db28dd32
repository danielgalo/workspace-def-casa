package utils;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class ResumeFichero {

	/** Fichero a resumir */
	private String fichero;

	/** Algoritmo utilizado para el resumen */
	private String algoritmo;

	/**
	 * @param fichero
	 * @param algoritmo
	 */
	public ResumeFichero(String fichero, String algoritmo) {
		super();
		this.fichero = fichero;
		this.algoritmo = algoritmo;
	}

	public String getContenidoReducido() {

		String contenido = getContenidoFichero();

		try {

			MessageDigest md = MessageDigest.getInstance(algoritmo);

			md.update(contenido.getBytes());

			byte[] digest = md.digest();

		} catch (NoSuchAlgorithmException e) {

			e.printStackTrace();

		}

		return null;
	}

	/**
	 * Saca el contenido de un fichero a una cadena
	 * 
	 * @return el String con el contenido del fichero
	 */
	private String getContenidoFichero() {

		// Preparar el arhivo y la cadena a devolver
		File ficheroOrigen = new File(fichero);
		FileReader reader = null;
		BufferedReader buffer = null;
		String contenido = "";

		try {

			reader = new FileReader(ficheroOrigen);
			buffer = new BufferedReader(reader);

			String linea;

			// Leer el archivo, guardar el contenido en la cadena
			while ((linea = buffer.readLine()) != null) {
				contenido += linea + "\n";
			}

		} catch (FileNotFoundException e) {

			e.printStackTrace();

		} catch (IOException e) {

			e.printStackTrace();

		} finally {
			closeReaders(reader, buffer);
		}

		return contenido;
	}

	/**
	 * Cierra los readers
	 * 
	 * @param reader
	 * @param buffer
	 */
	private void closeReaders(FileReader reader, BufferedReader buffer) {
		try {
			reader.close();
			buffer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/**
	 * @return the fichero
	 */
	public String getFichero() {
		return fichero;
	}

	/**
	 * @param fichero the fichero to set
	 */
	public void setFichero(String fichero) {
		this.fichero = fichero;
	}

	/**
	 * @return the algoritmo
	 */
	public String getAlgoritmo() {
		return algoritmo;
	}

	/**
	 * @param algoritmo the algoritmo to set
	 */
	public void setAlgoritmo(String algoritmo) {
		this.algoritmo = algoritmo;
	}

}
